# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    tags:
      - v*
  pull_request:
    branches: [ "main" ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint_code:
    name: Code linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      
      - name: Install requirement txt
        run: pip install -r requirements.txt
          
      - name: Install Linting frameworks
        run: pip install black flake8
      
      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          black: true
          flake8: true
          continue_on_error: false
      
  test_code:
    name: Code testing
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      
      - name: Install requirement txt
        run: pip install -r requirements.txt
  
      - name: Install Testing frameworks
        run: pip install pytest
        
      - name: Run Tests
        run: pytest test/test.py
        
  build_and_push:
    name: Containerize and Release
    runs-on: ubuntu-latest
    needs: [lint_code, test_code]
    if: startsWith(github.event.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: daniellettner/e-arts
      
      # Login to DockerHub account
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # Build a Docker image based on provided Dockerfile
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: get release tag
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
      
      - run: |
          echo ${{ steps.vars.outputs.tag }}
          
      # change config repository
      #- name: Repository Dispatch
      # uses: peter-evans/repository-dispatch@v1
      #  with:
      #    token: ${{ secrets.PAT }}
      #    repository: e-arts/e-arts-config
      #    event-type: new-image
      #    client-payload: '{"image": "${{ steps.meta.outputs.tags[0] }}"}'
